데이터 
 - 컴퓨터가 처리할 수 있는 문자, 숫자, 소리, 그림 따위의 형태로 된 정보

데이터베이스
 - 데이터 집합 및 저장소
 - 필요한 정보를얻기 위해 논리적으로 연관된 데이터
 - 일상에서 생성 및 활용
 - 조건 : 여러 사람이 공유, 사용
 - 절차 : 데이터베이스제작 > 테이블제작 > 데이터 조작(입력.수정.삭제) > 데이터 활용
 - 특징 : 다수와 공동 사용 / 중복 최소화 / 
 
DBMS
 - 데이터베이스 관리 및 운영
 - 사용자와 데이터베이스 연결하는 소프트웨어
 - 데이터베이스 사용자가 데이터베이스를 생성 공유 관리하도록 지원
 - 계층형, 망형, 관계형
 - 테이블이라고 하는 최소 단위로 구성

workbench
 - 서버
 - my sql 서버를 사용하기 위해 서버에 연결 > 접속을 돕는 도구

환경 변수 설정 
 - powerShell 관리자 > cmd > SETX PATH "
 - sql설치경로\Server\bin

사용가능한 데이터베이스 목록 조회
 - mysql -u root -p
 - SHOW DATABASES;

 - SELECT * FROM city;     (실행 : F9)
  ( * : 아스터리스크 )
  ( ` : 백틱 )
  ( ~: 틸드 )
  (@ : 앳 )
  ( - : 대시 )
  ( _ : 로우대시) 

SQL
 - RDBMS에서 데이터베이스를 조작하는 언어
 - Struntured Query Language
 - DDL, DML, DCL 구분
 - snake_case
DDL(data define lang)
 - 데이터 정의어
 - 관리자, 설계자
 - 제작 및 삭제
 - CREATE, ALTER, DROP
DML(data manipulation lang)
 - 데이터 조작어
 - 실질적 처리
 - 검색, 삽입, 수정 및 삭제
 - SELECT, INSERT, UPDATE, DELELT 
DCL(data cotrol lang)
 - 데이터 제어어
 - 관리자 관리 목적
 - 보안 및 무결성 등
 - GRANT(권한부여), REVOKE(권한철회) 
_____________________________________________________________________
SQL실습
 - 들여쓰기, 세미콜론, 에러문구
 - 한줄주석 : --
 - 여러주석 : /*     */

테이블 생성
CREATE DATABASE 테이블이름 DEFAULT CHARACTER SET UTF8;

아이디생성
CREATE USER '아이디이름'@'%'IDENTIFIED BY '비번';

권한부여
GRANT ALL PRIVILEGES 테이블이름.* TO '아이디이름'@'%';
FLUSH PRIVILEGES;

테이블생성
CREATE TABLE tb_user (
	u_id VARCHAR(100) NOT NULL PRIMARY KEY COMMENT '아이디',
	u_pw VARCHAR(100) NOT NULL COMMENT '비밀번호',
	u_name VARCHAR(100) NOT NULL COMMENT '이름',
	u_birth DATE COMMENT '생년월일',
	u_addr VARCHAR(100) NOT NULL COMMENT '주소',
	u_mob1 VARCHAR(100) NOT NULL COMMENT '휴대폰',
	u_mob2 VARCHAR(100) NOT NULL COMMENT '집전화',
	u_date DATE COMMENT '등록일자'
);
컬럼변경
ALTER TABLE tb_user CHANGE COLUMN u_date u_reg_date DATE;
컬럼 순서 변경
ALTER TABLE tb_user MODIFY u_mob1 VARCHAR(100) AFTER u_mob2;
컬럼 데이터 타입변경
ALTER TABLE tb_user MODIFY u_name CHAR(50);
새 컬럼 추가
ALTER TABLE tb_user ADD COLUMN u_gender CHAR(10) AFTER u_birth; 
컬럼 삭제
ALTER TABLE tb_user DROP COLUMN u_gender; 
테이블 이름변경
ALTER TABLE tb_user RENAME TO tb_member;
데이터베이스 지우기
DROP DATABASE 이름;
테이블 지우기
DROP DATABASE 이름;

K-V DB (키 밸류 형태로 저장하는 데이터베이스)
RDBMS (표 형태로 저장, 이름=속성=컬럼)(문법 길어지고 복잡)
Graph Database (그래프)
Document DB (RDB보다 자유롭다, 데이터 중복 허용, 정확도 낮음)
Column family DB (RDBMS처럼 표 형식, 유연성. 많은 양 입출력 경우)
Search Engine (빠른 검색, 검색이 중요한 사이트)


_____________________________________________________________________
DML (INSERT, UPDATE, DELELT)

INSERT INTO 테이블_이름 (속성_리스트) VALUES (값_리스트);
INSERT INTO 테이블 (번호, 이름, 나이) VALUES (1, 최성식, 28);

UPDATE tb_member
SET
	u_name = '이덕현'
WHERE
	u_id = 'VAL11';

DELETE 
FROM
	tb_member
WHERE
	u_id = 'VAL11';

-- 테이블복제
CREATE TABLE tb_member_bkup (
	SELECT
		u_id,
		u_name,
		u_addr
	from
		tb_member
);

-- 테이블 선택
SELECT - 어떤 테이블에 저장됐는지 알아야 함
	어떤 컬럼에 저장됐는지 알아야 함
	순서대로 작성, 순서대로 읽음
SELECT
	조회_열이름1,
	조회_열이름2 
FROM
	테이블_이름;
WHERE
	조건;
SELECT
	u_id,
	u_name,
	u_addr
FROM
	tb_member
WHERE
	u_id = 'VAL12';

(순서: from - where - select)
_____________________________________________________________________
(1) 테이블 내 생성 관계
 - 서로 관련있는 데이트들의 집합으로 이루어져야 함.
(2) 관련된 테이블 간 생성 관계
 - 식별 가능한 값을 이용하여 연결

테이블 관련 용어
 릴레이션은 스키마와 인스턴스로 이루어 짐.
 스키마 :  관계형 DB 릴레이션의 구성, 정보. 
	기본적 구조.
	테이블 첫 행에서 나타남.
	속성 및 자료형에 대한 정보.
 인스턴스 : 실제 저장된 값

 속성 = 컬럼 = 어트리뷰트 : (상품번호,상품명)
 차수(Degree) : 속성의 개수
 도메인 : 각 속성 값들의 집합
 튜플 = 행 : 각 줄
 카디널리티 : 릴레이션에 저장된 튜플, 행의 수
_______________________________________________________________________

-- db 생성
CREATE DATABASE ksmart51db DEFAULT CHARACTER SET UTF8;

-- id 생성
CREATE USER 'ksmart51id'@'%'IDENTIFIED BY 'ksmart51pw';

-- 권한부여
GRANT ALL PRIVILEGES ON kmart51db.* TO 'ksmart51id'@'%';

-- MySQL의 캐시를 지우고 새로운 설정
FLUSH PRIVILEGES;

-- 테이블생성
CREATE TABLE tb_user (
	u_id VARCHAR(100) NOT NULL PRIMARY KEY COMMENT '아이디',
	u_pw VARCHAR(100) NOT NULL COMMENT '비밀번호',
	u_name VARCHAR(100) NOT NULL COMMENT '이름',
	u_birth DATE COMMENT '생년월일',
	u_addr VARCHAR(100) NOT NULL COMMENT '주소',
	u_mob1 VARCHAR(100) NOT NULL COMMENT '휴대폰',
	u_mob2 VARCHAR(100) NOT NULL COMMENT '집전화',
	u_date DATE COMMENT '등록일자'
);

-- 컬럼 이름 변경
ALTER TABLE tb_member CHANGE COLUMN u_mob2 u_reg_date2 DATE;

-- 컬럼 순서 변경
ALTER TABLE tb_user MODIFY u_mob1 VARCHAR(100) AFTER u_mob2;

-- 컬럼 데이터 타입변경
ALTER TABLE tb_user MODIFY u_name CHAR(50);

-- 새 컬럼 추가
ALTER TABLE tb_user ADD COLUMN u_gender CHAR(10) AFTER u_birth; 

-- 컬럼 삭제
ALTER TABLE tb_user DROP COLUMN u_gender; 

-- 테이블 이름변경
ALTER TABLE tb_user RENAME TO tb_member;

-- 데이터베이스 삭제
DROP DATABASE 이름;

-- 테이블 삭제
DROP table 이름;
TRUNCATE TABLE 이름;
 
-- 존재 시  삭제
DROP TABLE if EXISTS 이름;

-- 데이터추가
INSERT INTO tb_member
	(u_id, u_pw, u_name, u_birth, u_addr, u_mob2, u_mob1, u_reg_date2)
	VALUES 
		('VAL12', 'qwerert', '조광철', '24.03.23', '관악구', '2811', '4222', NOW());

-- 데이터수정
UPDATE tb_member
SET
	u_birth = '97.02.01'
WHERE
	u_id = 'VAL11';

-- 데이터삭제
DELETE 
FROM
	tb_member
WHERE
	u_id = 'VAL11';

-- 테이블복제
CREATE TABLE tb_member_bkup2 (
	SELECT
		*
	from
		tb_member
);

-- 데이터 선택
SELECT
	u_id,
	u_name,
	u_addr
FROM
	tb_member
WHERE
	u_id = 'aa445';







 
